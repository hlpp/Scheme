(define (make-segment p1 p2) (cons p1 p2))
(define (start-segment seg) (car seg))
(define (end-segment seg) (cdr seg))
(define (make-point x y) (cons x y))
(define (x-point p) (car p))
(define (y-point p) (cdr p))
(define (print-point p)
  (newline)
  (display "[")
  (display (x-point p))
  (display ",")
  (display (y-point p))
  (display "]"))

(define (midpoint-segment seg)
  (let ((s (start-segment seg))
        (e (end-segment seg)))
    (make-point
     (/ (+ (x-point s) (x-point e)) 2)
     (/ (+ (y-point s) (y-point e)) 2))))

(define seg (make-segment (make-point 1 20) (make-point 5 40)))
(print-point (start-segment seg))
(print-point (end-segment seg))
(print-point (midpoint-segment seg))